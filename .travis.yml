language: cpp
sudo: required

os:
  - linux

compiler:
  - clang
  - gcc

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.7
      - george-edison55-precise-backports
    packages:
      - gcc-5
      - g++-5
      - binutils-gold
      - clang-3.7
      - libclang-common-3.7-dev
      - libclang-3.7-dev
      - libclang1-3.7
      - libllvm3.7
      - llvm-3.7
      - llvm-3.7-dev
      - llvm-3.7-runtime 
      - cmake
      - cmake-data

git:
  submodules: false

env:
  - build_type="release" static_libraries="TRUE"
  - build_type="release" static_libraries="FALSE"
  - build_type="debug" static_libraries="TRUE"
  - build_type="debug" static_libraries="FALSE"

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then wget https://cmake.org/files/v3.5/cmake-3.5.0-Darwin-x86_64.tar.gz && tar xfz cmake-3.5.0-Darwin-x86_64.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export PATH="`pwd`/cmake-3.5.0-Darwin-x86_64/CMake.app/Contents/bin":$PATH ; fi

script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if [ $CXX = "g++" ]; then export CXX="g++-5" CC="gcc-5"; AR="gcc-ar-5"; RANLIB="gcc-ranlib-5"; NM="gcc-nm-5"; fi; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if [ $CXX = "clang++" ]; then export CXX="clang++-3.7" CC="clang-3.7"; AR="/usr/lib/llvm-3.7/bin/llvm-ar"; RANLIB="/usr/lib/llvm-3.7/bin/llvm-ranlib"; NM="/usr/lib/llvm-3.7/bin/llvm-nm"; fi; fi
  - ./fetchDependencies.py
  - mkdir bin
  - cd bin
  - cmake -D build_type=$build_type -D static_libraries=$static_libraries ..
  - make -j 2
  - ctest --output-on-failure -j 2
  - if [ "$build_type" = "coverage" ]; then pip install --user cpp-coveralls; echo "loading coverage information"; coveralls --exclude Catch --exclude easylogging --exclude commonCMakeScripts --exclude utility --gcov-options '\-lp'; fi

matrix:
  exclude:
  #problem with llvm gold linker on travis
  - os: linux
    compiler: clang
    env: build_type="release" static_libraries="TRUE"

  - os: linux
    compiler: gcc
    env: build_type="release" static_libraries="TRUE"
    
  include:
  - os: osx
    compiler: clang
    env: build_type="release"
    
  - os: osx
    compiler: clang
    env: build_type="release" static_libraries="TRUE"
    
  - os: osx
    compiler: clang
    env: build_type="debug"

  - os: osx
    compiler: clang
    env: build_type="debug" static_libraries="TRUE"
    
  - os: linux
    compiler: gcc
    env: build_type="coverage"
 
  #- os: linux
  #  compiler: clang
  #  env: build_type="release" static_libraries="FALSE"

  #sudo rm "/usr/bin/ar"; sudo ln -s "/ "/usr/bin/ar"; sudo rm "/usr/bin/ranlib"; sudo ln -s "usr/lib/llvm-3.7/bin/llvm-ranlib" "/usr/bin/ranlib"; sudo rm "/usr/bin/nm"; sudo ln -s "usr/lib/llvm-3.7/bin/llvm-nm" "/usr/bin/nm";
  #if [ "$TRAVIS_OS_NAME" = "linux" ] && [ $CXX = "g++-5" ] && [ $static_libraries = "TRUE" ] && [ $build_type = "release" ]; then cmake -D build_type="release" -D static_libraries="TRUE" -D CMAKE_AR="/usr/bin/gcc-ar-5" -D CMAKE_RANLIB="/usr/bin/gcc-ranlib-5" -D CMAKE_NM="/usr/bin/gcc-nm-5" -D appended_flags="-fuse-linker-plugin" ..; else ; fi;
