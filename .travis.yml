language: cpp
sudo: required

os:
  - linux

compiler:
  - clang
  - gcc

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.7
      - george-edison55-precise-backports
    packages:
      - gcc-5
      - g++-5
      - binutils-gold
      - clang-3.7
      - libclang-common-3.7-dev
      - libclang-3.7-dev
      - libclang1-3.7
      - libllvm3.7
      - llvm-3.7
      - llvm-3.7-dev
      - llvm-3.7-runtime 
      - cmake
      - cmake-data

  coverity_scan:
    project:
      name: "njoy/math"
      description: "a repository providing interfaces and implementations of mathematical abstraction used in nuclear data processing"
    notification_email: apmccartney@lanl.gov
    branch_pattern: coverity_scan
      
git:
  submodules: false

env:
  matrix:
    - build_type="release" static_libraries="TRUE"
    - build_type="release" static_libraries="FALSE"
    - build_type="debug" static_libraries="TRUE"
    - build_type="debug" static_libraries="FALSE"
  global:
    - secure: "RoRamqA2dOX0DUDGOlHpNEw6rm6QpftdKQ/5ZwgF87yYrWIqS8B+9aMpyIjpOX0QZE5GvLuHFSiPEoAI7AkjERP0ZrPJ9Ot7dZ2DGVjiEFQlv8QJk8BnOiEmRo/OFFcZSYwEkw/Py5gQ3sKNbCHH8Vuyd1k0h940DHvHWQLcaTMbdu957uAUd7JteCWqgFbUeLhoWVa+7rpWM80e4cGv5l5S5RvuzZECUcpHSwOOGZXNGbGP5VXveQM4/pItne6MVQBWGVp75w+saxlF3e/jwbewxPLmq4aCpjnEe5DgfNvgzuiWkjO/YF4aLJeUwL+W+feZotW4OVrRIpTBHgDAvdepgrsgJrbOu7frfBm4sdwl9UV64Zqdbirf5jq1jv2wmabAfdCfRGEm+zMddHtrzmRqbTnqXuRhy+IvY7VqPbfxG1WwUTTeibH37xYpPBZ/6njWD3MHp+fymGyJxa8VCkjcGGsu3799l25HBfiXU8/+WBcWpB7EwReUyut6Mc72K466m/96/VKLKJ20eEjLDq6EJwzm27oobimUtv4+F9RYuyXBZRENUw6ArMNqK1Y28etXfp3h/+JxYDXwyLyG2tu70RFywap0diEdcKQsC5i+IZfOtF6TGlw0tRmKpvwaiKvYGuy6UUYXrwGiSgv0iSFm0YAmzlfiYnDoH1SOLf4="

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then wget https://cmake.org/files/v3.5/cmake-3.5.0-Darwin-x86_64.tar.gz && tar xfz cmake-3.5.0-Darwin-x86_64.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export PATH="`pwd`/cmake-3.5.0-Darwin-x86_64/CMake.app/Contents/bin":$PATH ; fi

script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if [ $CXX = "g++" ]; then export CXX="g++-5" CC="gcc-5"; AR="gcc-ar-5"; RANLIB="gcc-ranlib-5"; NM="gcc-nm-5"; fi; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if [ $CXX = "clang++" ]; then export CXX="clang++-3.7" CC="clang-3.7"; AR="/usr/lib/llvm-3.7/bin/llvm-ar"; RANLIB="/usr/lib/llvm-3.7/bin/llvm-ranlib"; NM="/usr/lib/llvm-3.7/bin/llvm-nm"; fi; fi
  - ./fetchDependencies.py
  - mkdir bin
  - cd bin
  - cmake -D build_type=$build_type -D static_libraries=$static_libraries ..
  - make -j 2
  - ctest --output-on-failure -j 2
  - if [ "$build_type" = "coverage" ]; then pip install --user cpp-coveralls; echo "loading coverage information"; coveralls  --exclude "/usr/include" --exclude-pattern ".*CMake.*|.*Catch.*|.*catch.*|.*utility.*|.*easylogging.*|.*test\.cpp" --root ".." --build-root "." --gcov-options '\-lp'; fi

matrix:
  exclude:
  #problem with llvm gold linker on travis
  - os: linux
    compiler: clang
    env: build_type="release" static_libraries="TRUE"

  - os: linux
    compiler: gcc
    env: build_type="release" static_libraries="TRUE"
    
  include:
  - os: osx
    compiler: clang
    env: build_type="release"
    
  - os: osx
    compiler: clang
    env: build_type="release" static_libraries="TRUE"
    
  - os: osx
    compiler: clang
    env: build_type="debug"

  - os: osx
    compiler: clang
    env: build_type="debug" static_libraries="TRUE"
    
  - os: linux
    compiler: gcc
    env: build_type="coverage"
