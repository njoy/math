#ifndef MATH_IMPLEMENTATION_SPLICEDPROBABILITYDISTRIBUTION_SRC_CUMULATIVEPROBABILITY_HPP
#define MATH_IMPLEMENTATION_SPLICEDPROBABILITYDISTRIBUTION_SRC_CUMULATIVEPROBABILITY_HPP

#include "math/implementation/SplicedProbabilityDistribution.hpp"

namespace math{
namespace implementation{

template< Interpolant pdfInterpolant, Interpolant cdfInterpolant >
double
SplicedProbabilityDistribution
< pdfInterpolant, cdfInterpolant >::cumulativeProbability
( const double event ) const {
  const auto& leftCondition = this->associatedConditions.front();
  const auto leftCumulativeProbability =
    this->pd0->cumulativeProbability( event );
  if (not this->pd1){ return leftCumulativeProbability; }
  const auto& rightCondition = this->associatedConditions.back();
  const auto rightCumulativeProbability =
    this->pd1->cumulativeProbability( event );
  return cdfInterpolant( this->condition,
                         leftCondition, rightCondition,
                         leftCumulativeProbability, rightCumulativeProbability );
}

}
}

#endif
